"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./contexts/AuthContext.tsx":
/*!**********************************!*\
  !*** ./contexts/AuthContext.tsx ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: function() { return /* binding */ AuthProvider; },\n/* harmony export */   msalInstance: function() { return /* binding */ msalInstance; },\n/* harmony export */   useAuth: function() { return /* binding */ useAuth; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_auth_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/auth-api */ \"(app-pages-browser)/./utils/auth-api.ts\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! sonner */ \"(app-pages-browser)/./node_modules/sonner/dist/index.mjs\");\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/msal-browser */ \"(app-pages-browser)/./node_modules/@azure/msal-browser/dist/app/PublicClientApplication.mjs\");\n/* harmony import */ var _azure_msal_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-react */ \"(app-pages-browser)/./node_modules/@azure/msal-react/dist/index.js\");\n/* harmony import */ var _config_authConfig__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/config/authConfig */ \"(app-pages-browser)/./config/authConfig.ts\");\n/* __next_internal_client_entry_do_not_use__ msalInstance,AuthProvider,useAuth auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\n\n\n// MSALインスタンスを作成\nconst msalInstance = new _azure_msal_browser__WEBPACK_IMPORTED_MODULE_7__.PublicClientApplication(_config_authConfig__WEBPACK_IMPORTED_MODULE_6__.msalConfig);\n// リダイレクト認証のハンドラを登録\nif (true) {\n    // リダイレクトコールバックの処理\n    msalInstance.handleRedirectPromise().then((response)=>{\n        // リダイレクト認証の結果がある場合の処理\n        if (response) {\n            console.log(\"リダイレクト認証の結果を取得:\", response);\n        }\n    }).catch((error)=>{\n        console.error(\"リダイレクト認証の処理中にエラーが発生しました:\", error);\n    });\n    // アカウントが存在する場合、サイレントログインを試みる\n    msalInstance.initialize().then(()=>{\n        // アカウントが選択されている場合はサイレント認証を試みる\n        const accounts = msalInstance.getAllAccounts();\n        if (accounts.length > 0) {\n            msalInstance.setActiveAccount(accounts[0]);\n        }\n    });\n}\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n// 内部コンポーネント - MSAL Contextを使うため\nfunction AuthProviderContent(param) {\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [isAuthenticating, setIsAuthenticating] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // 認証処理中フラグ\n    const [isLoggedOut, setIsLoggedOut] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // ログアウト完了フラグ\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_3__.useRouter)();\n    const { instance, accounts } = (0,_azure_msal_react__WEBPACK_IMPORTED_MODULE_5__.useMsal)();\n    const isMsalAuthenticated = (0,_azure_msal_react__WEBPACK_IMPORTED_MODULE_5__.useIsAuthenticated)();\n    // アプリ起動時に認証状態を確認\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const checkAuthentication = async ()=>{\n            console.log(\"\\uD83D\\uDD04 認証チェック開始\", {\n                isMsalAuthenticated,\n                accountsLength: accounts.length,\n                localToken: !!localStorage.getItem(\"auth_token\"),\n                isLoggedOut,\n                currentPath: window.location.pathname\n            });\n            // ログインページにいる場合はログアウトフラグをリセット\n            if (window.location.pathname === \"/login\") {\n                setIsLoggedOut(false);\n                setIsLoading(false);\n                return;\n            }\n            // ログアウト完了フラグがある場合はスキップ\n            if (isLoggedOut) {\n                console.log(\"⏭️ ログアウト完了済みのため認証チェックをスキップ\");\n                setIsLoading(false);\n                return;\n            }\n            setIsLoading(true);\n            try {\n                // ローカルストレージにauth_tokenがない場合は即座に未認証とする\n                const localToken = localStorage.getItem(\"auth_token\");\n                if (!localToken) {\n                    console.log(\"❌ ローカルトークンなし、未認証状態\");\n                    setUser(null);\n                    setIsLoading(false);\n                    return;\n                }\n                // MSALでの認証状態を確認\n                if (isMsalAuthenticated && accounts.length > 0) {\n                    console.log(\"✅ MSAL認証済み、バックエンド認証チェック中...\");\n                    // バックエンドのトークン検証\n                    const isAuth = await (0,_utils_auth_api__WEBPACK_IMPORTED_MODULE_2__.isAuthenticated)();\n                    console.log(\"\\uD83D\\uDD0D バックエンド認証状態:\", isAuth);\n                    if (isAuth) {\n                        console.log(\"✅ バックエンド認証有効、ユーザー情報取得中...\");\n                        const userData = await (0,_utils_auth_api__WEBPACK_IMPORTED_MODULE_2__.getCurrentUser)();\n                        setUser(userData);\n                        console.log(\"✅ ユーザー情報取得成功:\", userData.username);\n                    } else {\n                        console.log(\"❌ バックエンド認証無効、API用トークンを再取得中...\");\n                        // バックエンドの認証が無効な場合、Azure ADトークンを取得してバックエンドに送信\n                        const silentRequest = {\n                            scopes: _config_authConfig__WEBPACK_IMPORTED_MODULE_6__.apiRequest.scopes,\n                            account: accounts[0]\n                        };\n                        try {\n                            const response = await instance.acquireTokenSilent(silentRequest);\n                            console.log(\"✅ API用トークンのサイレント取得成功\");\n                            console.log(\"\\uD83D\\uDD04 handleAzureAuthResult呼び出し開始 (起動時認証チェック)\");\n                            await handleAzureAuthResult(response);\n                            console.log(\"✅ handleAzureAuthResult完了 (起動時認証チェック)\");\n                        } catch (error) {\n                            console.error(\"❌ サイレント認証に失敗しました:\", error);\n                            // サイレント認証に失敗した場合、ポップアップで試行\n                            try {\n                                console.log(\"\\uD83D\\uDD04 ポップアップでAPI用トークンを取得中...\");\n                                const popupResponse = await instance.acquireTokenPopup({\n                                    scopes: _config_authConfig__WEBPACK_IMPORTED_MODULE_6__.apiRequest.scopes,\n                                    account: accounts[0]\n                                });\n                                console.log(\"✅ ポップアップでAPI用トークン取得成功\");\n                                console.log(\"\\uD83D\\uDD04 handleAzureAuthResult呼び出し開始 (ポップアップ認証)\");\n                                await handleAzureAuthResult(popupResponse);\n                                console.log(\"✅ handleAzureAuthResult完了 (ポップアップ認証)\");\n                            } catch (popupError) {\n                                console.error(\"❌ ポップアップでのAPI用トークン取得も失敗:\", popupError);\n                            // ここではエラーを無視し、明示的なログインを待つ\n                            }\n                        }\n                    }\n                } else {\n                    console.log(\"❌ MSAL未認証またはアカウントなし\");\n                }\n            } catch (error) {\n                console.error(\"❌ 認証チェックエラー:\", error);\n                // トークンが無効な場合はクリアする\n                localStorage.removeItem(\"auth_token\");\n            } finally{\n                setIsLoading(false);\n                console.log(\"\\uD83C\\uDFC1 認証チェック完了\");\n            }\n        };\n        checkAuthentication();\n    }, [\n        isMsalAuthenticated,\n        accounts,\n        instance,\n        isLoggedOut\n    ]);\n    // Azure AD認証結果の処理\n    const handleAzureAuthResult = async (response)=>{\n        var _response_account, _response_account1;\n        console.log(\"\\uD83D\\uDE80 handleAzureAuthResult開始\", {\n            hasAccount: !!response.account,\n            accountUsername: (_response_account = response.account) === null || _response_account === void 0 ? void 0 : _response_account.username,\n            accountId: (_response_account1 = response.account) === null || _response_account1 === void 0 ? void 0 : _response_account1.homeAccountId\n        });\n        try {\n            // バックエンドAPI用のトークンを取得\n            console.log(\"\\uD83D\\uDE80 API用トークンを取得開始...\");\n            let apiToken;\n            try {\n                // apiRequestのスコープでトークンを取得\n                const apiTokenResponse = await instance.acquireTokenSilent({\n                    scopes: _config_authConfig__WEBPACK_IMPORTED_MODULE_6__.apiRequest.scopes,\n                    account: response.account\n                });\n                apiToken = apiTokenResponse.accessToken;\n                console.log(\"\\uD83D\\uDE80 ✅ API用トークン取得成功\");\n            } catch (apiTokenError) {\n                console.error(\"\\uD83D\\uDE80 ❌ API用トークンの取得に失敗:\", apiTokenError);\n                // フォールバック: ポップアップでAPI用トークンを取得\n                try {\n                    console.log(\"\\uD83D\\uDE80 ポップアップでAPI用トークンを再取得...\");\n                    const apiTokenResponse = await instance.acquireTokenPopup({\n                        scopes: _config_authConfig__WEBPACK_IMPORTED_MODULE_6__.apiRequest.scopes,\n                        account: response.account\n                    });\n                    apiToken = apiTokenResponse.accessToken;\n                    console.log(\"✅ API用トークン取得成功\");\n                } catch (popupError) {\n                    console.error(\"ポップアップでのAPI用トークン取得も失敗:\", popupError);\n                    throw new Error(\"バックエンドAPI用のトークンを取得できませんでした\");\n                }\n            }\n            // AuthenticationResultからMsalAuthenticationResult形式に変換\n            const msalAuthResult = {\n                accessToken: apiToken,\n                account: response.account\n            };\n            const authResponse = await (0,_utils_auth_api__WEBPACK_IMPORTED_MODULE_2__.loginWithAzureAD)(msalAuthResult);\n            setUser(authResponse.user);\n            sonner__WEBPACK_IMPORTED_MODULE_4__.toast.success(\"Azure ADでログインしました\");\n            return authResponse;\n        } catch (error) {\n            console.error(\"バックエンドの認証処理に失敗:\", error);\n            sonner__WEBPACK_IMPORTED_MODULE_4__.toast.error(\"ログインに失敗しました: \".concat(error.message));\n            throw error;\n        }\n    };\n    // Azure ADログイン処理\n    const handleLoginWithAzureAD = async ()=>{\n        setIsLoading(true);\n        setIsAuthenticating(true); // 明示的ログイン時もフラグ設定\n        setIsLoggedOut(false); // ログアウトフラグをリセット\n        try {\n            let response;\n            try {\n                // まずMicrosoft Graph用でログイン\n                response = await instance.loginPopup(_config_authConfig__WEBPACK_IMPORTED_MODULE_6__.loginRequest);\n            } catch (popupError) {\n                console.warn(\"ポップアップログインに失敗しました。リダイレクトログインを試みます:\", popupError);\n                // ポップアップが失敗した場合、リダイレクトを試みる\n                instance.loginRedirect(_config_authConfig__WEBPACK_IMPORTED_MODULE_6__.loginRequest);\n                return; // リダイレクト後はこの関数から抜ける\n            }\n            console.log(\"\\uD83D\\uDD04 handleAzureAuthResult呼び出し開始 (明示的ログイン)\");\n            // ログイン成功後、API用トークンも取得して認証処理\n            return await handleAzureAuthResult(response);\n        } catch (error) {\n            console.error(\"Azure ADログインエラー:\", error);\n            sonner__WEBPACK_IMPORTED_MODULE_4__.toast.error(\"ログインに失敗しました: \".concat(error.message || \"Azure AD認証エラー\"));\n            throw error;\n        } finally{\n            setIsLoading(false);\n            setIsAuthenticating(false); // 明示的ログイン完了時もフラグリセット\n        }\n    };\n    // ログアウト処理\n    const logout = async ()=>{\n        setIsLoading(true);\n        try {\n            console.log(\"\\uD83D\\uDD04 ログアウト処理開始...\");\n            // ログアウト完了フラグを設定（認証チェックをスキップするため）\n            setIsLoggedOut(true);\n            // ユーザー状態をすぐにクリア（画面から即座に消すため）\n            setUser(null);\n            // ローカルストレージからトークンを削除\n            localStorage.removeItem(\"auth_token\");\n            localStorage.removeItem(\"user_data\");\n            // SessionStorageも念のためクリア\n            sessionStorage.clear();\n            // バックエンドからログアウト\n            try {\n                await (0,_utils_auth_api__WEBPACK_IMPORTED_MODULE_2__.logout)();\n                console.log(\"✅ バックエンドログアウト完了\");\n            } catch (error) {\n                console.warn(\"⚠️ バックエンドログアウトでエラー:\", error);\n            // バックエンドエラーは無視して続行\n            }\n            // MSALアカウントとキャッシュをクリア（ポップアップなしでサイレントクリア）\n            try {\n                console.log(\"\\uD83D\\uDD04 MSALアカウントとキャッシュをクリア中...\");\n                const accounts = instance.getAllAccounts();\n                if (accounts.length > 0) {\n                    // アクティブアカウントをクリア\n                    instance.setActiveAccount(null);\n                }\n                // ブラウザのキャッシュとセッションをクリア\n                try {\n                    // MSALキャッシュをクリア\n                    await instance.clearCache();\n                    console.log(\"✅ MSALキャッシュクリア完了\");\n                } catch (clearError) {\n                    console.warn(\"⚠️ MSALキャッシュクリアでエラー:\", clearError);\n                }\n                console.log(\"✅ MSALアカウントクリア完了\");\n            } catch (error) {\n                console.warn(\"⚠️ MSALアカウントクリアでエラー:\", error);\n            // MSALエラーは無視して続行\n            }\n            sonner__WEBPACK_IMPORTED_MODULE_4__.toast.info(\"ログアウトしました\");\n            // 確実にログインページにリダイレクト\n            window.location.href = \"/login\";\n        } catch (error) {\n            console.error(\"❌ ログアウトエラー:\", error);\n            // エラーが発生してもユーザー状態をクリアしてログインページに移動\n            setIsLoggedOut(true);\n            setUser(null);\n            localStorage.removeItem(\"auth_token\");\n            localStorage.removeItem(\"user_data\");\n            sonner__WEBPACK_IMPORTED_MODULE_4__.toast.error(\"ログアウト処理中にエラーが発生しました\");\n            window.location.href = \"/login\";\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // 認証状態確認\n    const checkAuth = async ()=>{\n        try {\n            console.log(\"\\uD83D\\uDD0D checkAuth開始\", {\n                isMsalAuthenticated,\n                accountsLength: accounts.length,\n                isAuthenticating,\n                hasUser: !!user\n            });\n            if (!isMsalAuthenticated || accounts.length === 0) {\n                console.log(\"❌ MSAL未認証またはアカウントなし\");\n                return false;\n            }\n            // 認証処理中の場合はスキップ\n            if (isAuthenticating) {\n                console.log(\"⏳ 認証処理中のためスキップ\");\n                return false;\n            }\n            // ユーザー情報が既にある場合は、バックエンド認証のみチェック\n            if (user) {\n                const isAuth = await (0,_utils_auth_api__WEBPACK_IMPORTED_MODULE_2__.isAuthenticated)();\n                console.log(\"\\uD83D\\uDD0D 既存ユーザーの認証状態:\", isAuth);\n                return isAuth;\n            }\n            const isAuth = await (0,_utils_auth_api__WEBPACK_IMPORTED_MODULE_2__.isAuthenticated)();\n            console.log(\"\\uD83D\\uDD0D バックエンド認証状態:\", isAuth);\n            if (!isAuth) {\n                // 認証処理中フラグを設定\n                setIsAuthenticating(true);\n                try {\n                    // バックエンド認証がない場合、API用トークンを取得してバックエンドに送信\n                    const silentRequest = {\n                        scopes: _config_authConfig__WEBPACK_IMPORTED_MODULE_6__.apiRequest.scopes,\n                        account: accounts[0]\n                    };\n                    console.log(\"\\uD83D\\uDD04 API用トークンをサイレント取得中...\");\n                    const response = await instance.acquireTokenSilent(silentRequest);\n                    console.log(\"✅ API用トークンサイレント取得成功\");\n                    await handleAzureAuthResult(response);\n                    // 再度認証状態を確認\n                    const finalAuthResult = await (0,_utils_auth_api__WEBPACK_IMPORTED_MODULE_2__.isAuthenticated)();\n                    console.log(\"\\uD83D\\uDD0D 最終認証状態:\", finalAuthResult);\n                    return finalAuthResult;\n                } catch (error) {\n                    console.error(\"❌ API用トークン取得失敗:\", error);\n                    return false;\n                } finally{\n                    // 認証処理完了フラグをリセット\n                    setIsAuthenticating(false);\n                }\n            }\n            if (isAuth && !user) {\n                try {\n                    console.log(\"\\uD83D\\uDD04 ユーザー情報取得中...\");\n                    const userData = await (0,_utils_auth_api__WEBPACK_IMPORTED_MODULE_2__.getCurrentUser)();\n                    setUser(userData);\n                    console.log(\"✅ ユーザー情報取得成功:\", userData.username);\n                } catch (error) {\n                    console.error(\"❌ ユーザー情報取得失敗:\", error);\n                    return false;\n                }\n            }\n            console.log(\"✅ checkAuth完了:\", isAuth);\n            return isAuth;\n        } catch (error) {\n            console.error(\"❌ 認証チェックエラー:\", error);\n            return false;\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            user,\n            isLoading,\n            loginWithAzureAD: handleLoginWithAzureAD,\n            logout,\n            checkAuth\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/yanagiya/Project/TEIOS/ai-driven/rag-webui/contexts/AuthContext.tsx\",\n        lineNumber: 417,\n        columnNumber: 5\n    }, this);\n}\n_s(AuthProviderContent, \"zfe7TRPDbJ8Bl3iAtklUROJTmEE=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_3__.useRouter,\n        _azure_msal_react__WEBPACK_IMPORTED_MODULE_5__.useMsal,\n        _azure_msal_react__WEBPACK_IMPORTED_MODULE_5__.useIsAuthenticated\n    ];\n});\n_c = AuthProviderContent;\n// MsalProviderでラップした最終的なAuthProvider\nfunction AuthProvider(param) {\n    let { children } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_azure_msal_react__WEBPACK_IMPORTED_MODULE_5__.MsalProvider, {\n        instance: msalInstance,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthProviderContent, {\n            children: children\n        }, void 0, false, {\n            fileName: \"/Users/yanagiya/Project/TEIOS/ai-driven/rag-webui/contexts/AuthContext.tsx\",\n            lineNumber: 435,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/yanagiya/Project/TEIOS/ai-driven/rag-webui/contexts/AuthContext.tsx\",\n        lineNumber: 434,\n        columnNumber: 5\n    }, this);\n}\n_c1 = AuthProvider;\n// カスタムフック\nfunction useAuth() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error(\"useAuth must be used within an AuthProvider\");\n    }\n    return context;\n}\n_s1(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c, _c1;\n$RefreshReg$(_c, \"AuthProviderContent\");\n$RefreshReg$(_c1, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./contexts/AuthContext.tsx\n"));

/***/ })

});