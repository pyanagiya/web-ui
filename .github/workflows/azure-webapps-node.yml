# Simplified Next.js App Service CI/CD Pipeline
name: Deploy to Azure App Service

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment:
      name: 'Production'
      url: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --silent

    - name: Build application
      run: npm run build
      env:
        CI: true

    - name: Prepare deployment package
      run: |
        mkdir -p deploy
        
        # Copy built application
        cp -r .next deploy/
        cp -r public deploy/ 2>/dev/null || true
        cp -r app deploy/ 2>/dev/null || true
        cp -r styles deploy/ 2>/dev/null || true
        
        # Copy essential files only
        cp package.json deploy/
        cp package-lock.json deploy/
        cp next.config.js deploy/
        cp server.js deploy/
        cp tailwind.config.js deploy/ 2>/dev/null || true
        cp postcss.config.js deploy/ 2>/dev/null || true
        
        # Optimize package.json for production
        cd deploy
        node -e "
          const pkg = require('./package.json');
          delete pkg.devDependencies;
          pkg.scripts = {
            start: pkg.scripts.start,
            build: pkg.scripts.build
          };
          delete pkg.private;
          require('fs').writeFileSync('./package.json', JSON.stringify(pkg, null, 2));
        "
        
        # Install production dependencies only
        npm ci --production --silent --no-audit --no-fund
        
        cd ..
        echo "Package size: $(du -sh deploy/ | cut -f1)"

    - name: Login to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Configure App Service
      run: |
        # Configure App Service settings
        az webapp config appsettings set \
          --name "${{ secrets.AZURE_WEBAPP_NAME }}" \
          --resource-group "teios-ai-rg" \
          --settings \
            NODE_ENV=production \
            WEBSITES_PORT=8080 \
            WEBSITE_NODE_DEFAULT_VERSION=20.x \
            WEBSITE_RUN_FROM_PACKAGE=1 \
            NEXT_PUBLIC_AZURE_AD_CLIENT_ID=9c2804fa-5504-4312-ba36-ee5987b9400a \
            NEXT_PUBLIC_AZURE_AD_TENANT_ID=${{ secrets.AZURE_TENANT_ID }} \
            NEXT_PUBLIC_API_URL=${{ secrets.API_URL }} \
            
        az webapp config set \
          --name "${{ env.AZURE_WEBAPP_NAME }}" \
          --resource-group "teios-ai-rg" \
          --startup-file "node server.js"

    - name: Deploy to Azure
      run: |
        cd deploy
        zip -r ../deploy.zip . -q
        cd ..
        
        echo "Deploy package size: $(du -sh deploy.zip | cut -f1)"
        
        az webapp deployment source config-zip \
          --name "${{ env.AZURE_WEBAPP_NAME }}" \
          --resource-group "teios-ai-rg" \
          --src deploy.zip \
          --timeout 1200

    - name: Health check
      run: |
        echo "Waiting for app to start..."
        sleep 60
        
        for i in {1..5}; do
          echo "Health check attempt $i/5"
          
          if curl -f -s https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net > /dev/null; then
            echo "✅ App is running!"
            exit 0
          fi
          
          if [ $i -eq 5 ]; then
            echo "❌ Health check failed"
            exit 1
          fi
          
          sleep 30
        done

    - name: Logout from Azure
      run: az logout
      if: always()

    - name: Deployment summary
      run: |
        echo "🚀 Deployment completed!"
        echo "📍 App URL: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
      if: success()
